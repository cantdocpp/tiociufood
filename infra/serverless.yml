service: tiociufood-operations

custom:
  bucket: tiociufood
  uploadBucket: ${self:custom.bucket}-uploads

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-2
  stage: ${opt:stage, 'dev'}
  timeout: 5

resources:
  Resources:
    adminTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: adminTable
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
          - AttributeName: password
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    tiociufoodTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: mainTable
        AttributeDefinitions:
          - AttributeName: identifier
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: identifier
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    TiociufoodBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucket}
        AccessControl: PublicRead
        CorsConfiguration:
          CorsRules:
            - AllowedMethods:
                - PUT
                - GET
                - POST
                - HEAD
              AllowedOrigins:
                - "*"
              AllowedHeaders:
                - "*"
    TiociufoodBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: TiociufoodBucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - "s3:DeleteObject"
                - "s3:GetObject"
                - "s3:PutObject"
              Resource: arn:aws:s3:::${self:custom.bucket}/*
